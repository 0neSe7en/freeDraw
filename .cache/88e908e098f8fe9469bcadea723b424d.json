{"dependencies":[],"generated":{"js":"const clearBtn = document.getElementById('clearBtn');\nconst ele = document.getElementById('canvas');\n\nconst context = ele.getContext('2d');\n// const ratio = window.devicePixelRatio || 1;\nconst ratio = 1;\nconst retina = ratio > 1;\nconsole.log(ratio, context.scale);\nlet drawing = false;\nlet currentLine = [];\nlet lastPoint = null;\n\nclass Point {\n  constructor(x, y) {\n    this.x = x;\n    this.y = y;\n  }\n}\n\nfunction lerp (last, that, t) {\n  if (typeof t === 'undefined') {\n    t = 0.5;\n  }\n  t = Math.max(Math.min(1, t), 0);\n  return new Point(last.x + (that.x - last.x) * t, last.y + (that.y - last.y) * t);\n}\n\nele.addEventListener('mousedown', (e) => {\n  context.beginPath();\n  context.strokeStyle = \"#df4b26\";\n  context.lineJoin = \"round\";\n  context.lineCap = 'round';\n  context.lineWidth = 10 / ratio;\n  lastPoint = new Point(e.offsetX, e.offsetY);\n  drawing = true;\n})\n\nele.addEventListener('mouseup', () => {\n  drawing = false;\n})\n\nele.addEventListener('mouseleave', () => {\n  drawing = false;\n})\n\n// ele.addEventListener('mousemove', (e) => {\n//   if (!drawing) {\n//     return;\n//   }\n//   // context.beginPath();\n//\n//   const currentPoint = new Point(\n//     Math.floor(e.offsetX),\n//     Math.floor(e.offsetY));\n//   context.lineTo(currentPoint.x, currentPoint.y);\n//   context.stroke();\n//   lastPoint = currentPoint;\n//   // context.closePath();\n//   // if (retina) {\n//   //   context.restore();\n//   // }\n// })\n\n\nele.addEventListener('mousemove', (e) => {\n  if (!drawing) {\n    return;\n  }\n  // if (retina) {\n  //   context.save();\n  //   context.scale(ratio, ratio);\n  // }\n  context.beginPath();\n\n  context.moveTo(lastPoint.x, lastPoint.y);\n  context.strokeStyle = \"#df4b26\";\n  context.lineJoin = \"round\";\n  context.lineCap = 'round';\n  context.lineWidth = 10 / ratio;\n\n  const currentPoint = new Point(Math.floor(e.offsetX), Math.floor(e.offsetY));\n  const midPoint = lerp(lastPoint, currentPoint);\n  console.log(currentPoint, midPoint, lastPoint);\n  context.quadraticCurveTo(lastPoint.x, lastPoint.y, midPoint.x, midPoint.y);\n  context.lineTo(currentPoint.x, currentPoint.y);\n  context.stroke();\n  lastPoint = currentPoint;\n  // context.closePath();\n  // if (retina) {\n  //   context.restore();\n  // }\n})\n\nclearBtn.addEventListener('click', () => {\n  context.clearRect(0, 0, context.canvas.width, context.canvas.height); // Clears the canvas\n})\n"},"hash":"fe5857ccdb44ffe6e7cc1ad2fd91724a"}